# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  dependsOn: []
  jobs:
  - job: build_job
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      enabled: false # pas le temps de corriger ca
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: CopyFiles@2
      displayName: 'Copy Files'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**/*.json'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
- stage: DeployDev
  dependsOn: [Build]
  jobs:  
  - deployment: deploy_dev
    displayName: deploy Web App DEV
    variables:
      WebsiteName: 'pul-yaml-29608927'
      ResourceGroupName: 'rg-lod'    
    # Creates an environment if it doesn't exist.
    environment: 'partsunlimited_dev'
    strategy:
      # Default deployment strategy, more coming...
      runOnce:
        deploy:
          steps:
          - checkout: none 
          - script: echo my first deployment
          - task: CmdLine@2
            enabled: false
            inputs:
              script: |
                echo deploiement a dev
                
                echo bidon
          - task: AzureRmWebAppDeployment@3
            displayName: 'Azure App Service Deploy'
            inputs:
              azureSubscription: 'PUL-Connection'
              WebAppName: '$(WebsiteName)'
              DeployToSlotFlag: true
              ResourceGroupName: '$(ResourceGroupName)'
              SlotName: dev
              Package: '$(Pipeline.Workspace)/**/PartsUnlimitedWebsite.zip'

- stage: DeployProd
  dependsOn: [DeployDev]
  jobs:
  - deployment: deploy_prod
    displayName: deploy Web App PROD
    variables:
      WebsiteName: 'pul-yaml-29608927'
      ResourceGroupName: 'rg-lod'
    # Creates an environment if it doesn't exist.
    environment: 'partsunlimited_prod'
    strategy:
      # Default deployment strategy, more coming...
      runOnce:
        deploy:
          steps:
          - task: CmdLine@2
            enabled: false
            inputs:
              script: |
                echo deploiement a prod (swap slot)
                
                echo bidon          
          - task: AzureAppServiceManage@0
            displayName: 'Swap Slots: $(WebsiteName)'
            inputs:
              azureSubscription: 'PUL-Connection'
              WebAppName: '$(WebsiteName)'
              ResourceGroupName: '$(ResourceGroupName)'
              SourceSlot: dev
